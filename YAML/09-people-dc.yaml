kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/vcs-url: 'https://github.com/dyangcht/query-labs.git'
    app.quarkus.io/vcs-url: 'https://github.com/dyangcht/query-labs.git'
  name: people-2
  labels:
    app.kubernetes.io/name: people
    app.kubernetes.io/version: 2.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 1
      maxSurge: 2
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
  replicas: 4
  selector:
    app.kubernetes.io/name: people
    app.kubernetes.io/version: 2.0-SNAPSHOT
  template:
    metadata:
      labels:
        app.kubernetes.io/name: people
        app.kubernetes.io/version: 2.0-SNAPSHOT
        app.openshift.io/runtime: quarkus
      annotations:
        app.openshift.io/vcs-url: 'https://github.com/dyangcht/query-labs.git'
        app.quarkus.io/vcs-url: 'https://github.com/dyangcht/query-labs.git'
    spec:
      initContainers:
        - name: init-when-postgres-ready
          image: centos/postgresql-96-centos7
          command:
            - sh
            - '-c'
            - 'psql postgresql://sa:sa@postgres-database/person -c "\dt"'
          env:
            - name: POSTGRESQL_USER
              value: user
            - name: POSTGRESQL_PASSWORD
              value: user
            - name: POSTGRESQL_DATABASE
              value: db
            - name: PGPASSWORD
              value: sa
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - '-c'
                  - sleep 15
          name: people-2
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          resources:
            requests:
              memory: "380Mi"
              cpu: "50m"
            limits:
              memory: "480Mi"
              cpu: "250m"
          envFrom:
            - configMapRef:
                name: ui-env
          image: dyangcht/qa:v1.1
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
